{
	"folders":
	[
		{
			"path": "."
		},
		{
			"path": "../../lib/mylib"
		}
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[
			"APPLICATION_DLL_NAME",
			"APPLICATION_TEMP_DLL_NAME",
			"Axis_None",
			"Axis_W",
			"Axis_X",
			"Axis_Y",
			"Axis_Z",
			"Button_0",
			"Button_1",
			"Button_2",
			"Button_3",
			"Button_4",
			"Button_5",
			"Button_6",
			"Button_7",
			"Button_8",
			"Button_9",
			"Button_A",
			"Button_Alt",
			"Button_B",
			"Button_Backspace",
			"Button_C",
			"Button_CapsLock",
			"Button_CloseBracket",
			"Button_Colon",
			"Button_Comma",
			"Button_Control",
			"Button_D",
			"Button_Delete",
			"Button_Down",
			"Button_E",
			"Button_End",
			"Button_Enter",
			"Button_Escape",
			"Button_F",
			"Button_F1",
			"Button_F10",
			"Button_F11",
			"Button_F12",
			"Button_F2",
			"Button_F3",
			"Button_F4",
			"Button_F5",
			"Button_F6",
			"Button_F7",
			"Button_F8",
			"Button_F9",
			"Button_G",
			"Button_H",
			"Button_Home",
			"Button_I",
			"Button_Insert",
			"Button_J",
			"Button_K",
			"Button_L",
			"Button_Left",
			"Button_M",
			"Button_Minus",
			"Button_N",
			"Button_O",
			"Button_OpenBracket",
			"Button_P",
			"Button_PageDown",
			"Button_PageUp",
			"Button_Period",
			"Button_Pipe",
			"Button_Plus",
			"Button_Q",
			"Button_QuestionMark",
			"Button_Quote",
			"Button_R",
			"Button_Right",
			"Button_S",
			"Button_Shift",
			"Button_Space",
			"Button_T",
			"Button_Tab",
			"Button_Tilde",
			"Button_U",
			"Button_Up",
			"Button_V",
			"Button_W",
			"Button_X",
			"Button_Y",
			"Button_Z",
			"Buttons_NumButtons",
			"Color_AliceBlue",
			"Color_AntiqueWhite",
			"Color_Aquamarine",
			"Color_Azure",
			"Color_Banana",
			"Color_Beet",
			"Color_Beige",
			"Color_Bisque",
			"Color_Black",
			"Color_BlancheDalmond",
			"Color_Blue",
			"Color_BlueViolet",
			"Color_Brick",
			"Color_Brown",
			"Color_BurlyWood",
			"Color_BurnTumber",
			"Color_BurntSienna",
			"Color_CadetBlue",
			"Color_CadmiumOrange",
			"Color_CadmiumYellow",
			"Color_Carrot",
			"Color_Chartreuse",
			"Color_Chocolate",
			"Color_Cobalt",
			"Color_CobaltGreen",
			"Color_ColdGrey",
			"Color_Coral",
			"Color_CornSilk",
			"Color_CornflowerBlue",
			"Color_Crimson",
			"Color_Cyan",
			"Color_DarkCyan",
			"Color_DarkGoldenRod",
			"Color_DarkGray",
			"Color_DarkGreen",
			"Color_DarkKhaki",
			"Color_DarkOliveGreen",
			"Color_DarkOrange",
			"Color_DarkOrchid",
			"Color_DarkRed",
			"Color_DarkSalmon",
			"Color_DarkSeaGreen",
			"Color_DarkSlateBlue",
			"Color_DarkSlateGray",
			"Color_DarkTurquoise",
			"Color_DarkViolet",
			"Color_DeepPink",
			"Color_DeepSkyBlue",
			"Color_DimGray",
			"Color_DodgerBlue",
			"Color_EggShell",
			"Color_EmeraldGreen",
			"Color_FireBrick",
			"Color_Flesh",
			"Color_FloralWhite",
			"Color_ForestGreen",
			"Color_Gainsboro",
			"Color_GhostWhite",
			"Color_Gold",
			"Color_GoldenRod",
			"Color_Gray",
			"Color_Green",
			"Color_GreenYellow",
			"Color_HalfTransparent",
			"Color_HalfTransparentBlack",
			"Color_Honeydew",
			"Color_HotPink",
			"Color_IndianRed",
			"Color_Indigo",
			"Color_Ivory",
			"Color_IvoryBlack",
			"Color_Khaki",
			"Color_Lavender",
			"Color_LawnGreen",
			"Color_LemonChiffon",
			"Color_LightBlue",
			"Color_LightCoral",
			"Color_LightCyan",
			"Color_LightGoldenRod",
			"Color_LightGreen",
			"Color_LightGrey",
			"Color_LightPink",
			"Color_LightSalmon",
			"Color_LightSeaGreen",
			"Color_LightSkyBlue",
			"Color_LightSlateBlue",
			"Color_LightSlateGray",
			"Color_LightSteelBlue",
			"Color_LightYellow",
			"Color_Lime",
			"Color_LimeGreen",
			"Color_Linen",
			"Color_Magenta",
			"Color_ManganeseBlue",
			"Color_Maroon",
			"Color_MediumOrchid",
			"Color_MediumPurple",
			"Color_MediumSeaGreen",
			"Color_MediumSlateBlue",
			"Color_MediumSpringGreen",
			"Color_MediumTurquoise",
			"Color_MediumVioletRed",
			"Color_Melon",
			"Color_MidnightBlue",
			"Color_Mint",
			"Color_MintCream",
			"Color_MistyRose",
			"Color_Moccasin",
			"Color_NavajoWhite",
			"Color_Navy",
			"Color_OldLace",
			"Color_Olive",
			"Color_OliveDrab",
			"Color_Orange",
			"Color_OrangeRed",
			"Color_Orchid",
			"Color_PaleGoldenRod",
			"Color_PaleGreen",
			"Color_PaleTurquoise",
			"Color_PaleVioletRed",
			"Color_PapayaWhip",
			"Color_PeachPuff",
			"Color_Peacock",
			"Color_Peru",
			"Color_Pink",
			"Color_Plum",
			"Color_PowderBlue",
			"Color_Purple",
			"Color_Raspberry",
			"Color_RawSienna",
			"Color_Red",
			"Color_RosyBrown",
			"Color_RoyalBlue",
			"Color_SaddleBrown",
			"Color_Salmon",
			"Color_SandyBrown",
			"Color_SapGreen",
			"Color_SeaGreen",
			"Color_Seashell",
			"Color_Sepia",
			"Color_Sienna",
			"Color_Silver",
			"Color_SkyBlue",
			"Color_SlateBlue",
			"Color_SlateGray",
			"Color_Snow",
			"Color_SpringGreen",
			"Color_SteelBlue",
			"Color_Sunlight",
			"Color_Tan",
			"Color_Teal",
			"Color_Thistle",
			"Color_Tomato",
			"Color_TransparentBlack",
			"Color_TransparentWhite",
			"Color_Turquoise",
			"Color_TurquoiseBlue",
			"Color_Violet",
			"Color_VioletRed",
			"Color_WarmGrey",
			"Color_Wheat",
			"Color_White",
			"Color_WhiteSmoke",
			"Color_Yellow",
			"Color_YellowGreen",
			"Cursor_Default",
			"Cursor_Pointer",
			"Cursor_ResizeHorizontal",
			"Cursor_ResizeVertical",
			"Cursor_Text",
			"DAYS_PER_4YEARS",
			"DEBUG",
			"DEFAULT_WINDOW_TITLE",
			"DayOfWeek_Friday",
			"DayOfWeek_Monday",
			"DayOfWeek_Saturday",
			"DayOfWeek_Sunday",
			"DayOfWeek_Thursday",
			"DayOfWeek_Tuesday",
			"DayOfWeek_Wednesday",
			"Dir2_All",
			"Dir2_Down",
			"Dir2_Left",
			"Dir2_None",
			"Dir2_Right",
			"Dir2_Up",
			"Dir3_All",
			"Dir3_Backward",
			"Dir3_Down",
			"Dir3_Forward",
			"Dir3_Left",
			"Dir3_None",
			"Dir3_Right",
			"Dir3_Up",
			"EXE_ICON_ID",
			"EasingStyle_BackIn",
			"EasingStyle_BackInOut",
			"EasingStyle_BackOut",
			"EasingStyle_BounceIn",
			"EasingStyle_BounceInOut",
			"EasingStyle_BounceOut",
			"EasingStyle_CircularIn",
			"EasingStyle_CircularInOut",
			"EasingStyle_CircularOut",
			"EasingStyle_Count",
			"EasingStyle_CubicIn",
			"EasingStyle_CubicInOut",
			"EasingStyle_CubicOut",
			"EasingStyle_ElasticIn",
			"EasingStyle_ElasticInOut",
			"EasingStyle_ElasticOut",
			"EasingStyle_ExponentialIn",
			"EasingStyle_ExponentialInOut",
			"EasingStyle_ExponentialOut",
			"EasingStyle_Linear",
			"EasingStyle_None",
			"EasingStyle_QuadraticIn",
			"EasingStyle_QuadraticInOut",
			"EasingStyle_QuadraticOut",
			"EasingStyle_QuarticIn",
			"EasingStyle_QuarticInOut",
			"EasingStyle_QuarticOut",
			"EasingStyle_QuinticIn",
			"EasingStyle_QuinticInOut",
			"EasingStyle_QuinticOut",
			"EasingStyle_SineIn",
			"EasingStyle_SineInOut",
			"EasingStyle_SineOut",
			"GLFW_PRESS",
			"GLFW_REPEAT",
			"LINUX_COMPILATION",
			"Mat4_Identity",
			"Matrix4_Identity",
			"MemoryArenaType_Heap",
			"MemoryArenaType_Linear",
			"MemoryArenaType_Temp",
			"Modifier_Alt",
			"Modifier_CapsLock",
			"Modifier_Ctrl",
			"Modifier_Shift",
			"Month_April",
			"Month_August",
			"Month_December",
			"Month_February",
			"Month_January",
			"Month_July",
			"Month_June",
			"Month_March",
			"Month_May",
			"Month_November",
			"Month_October",
			"Month_September",
			"MouseButton_Left",
			"MouseButton_Middle",
			"MouseButton_Right",
			"NUM_COLORS",
			"NumCursorTypes",
			"OSX_COMPILATION",
			"PLATFORM_VERSION_BUILD",
			"PLATFORM_VERSION_MAJOR",
			"PLATFORM_VERSION_MINOR",
			"PROJECT_NAME",
			"Pi32",
			"Pi64",
			"Platform_Linux",
			"Platform_OSX",
			"Platform_Windows",
			"SECONDS_PER_4YEARS",
			"SECONDS_PER_DAY",
			"SECONDS_PER_HOUR",
			"SECONDS_PER_WEEK",
			"SHOW_CONSOLE_WINDOW",
			"TOPMOST_WINDOW",
			"TimeUnit_Days",
			"TimeUnit_Hours",
			"TimeUnit_Milliseconds",
			"TimeUnit_Minutes",
			"TimeUnit_Months",
			"TimeUnit_Seconds",
			"TimeUnit_Years",
			"Transform2_Identity",
			"Transform3_Identity",
			"Vec2_Down",
			"Vec2_Half",
			"Vec2_Left",
			"Vec2_One",
			"Vec2_Right",
			"Vec2_Up",
			"Vec2_Zero",
			"Vec2i_Down",
			"Vec2i_Left",
			"Vec2i_One",
			"Vec2i_Right",
			"Vec2i_Up",
			"Vec2i_Zero",
			"Vec3_Back",
			"Vec3_Backward",
			"Vec3_Bottom",
			"Vec3_Down",
			"Vec3_Forward",
			"Vec3_Front",
			"Vec3_Half",
			"Vec3_Left",
			"Vec3_One",
			"Vec3_Right",
			"Vec3_Top",
			"Vec3_Up",
			"Vec3_Zero",
			"Vec3i_Back",
			"Vec3i_Backward",
			"Vec3i_Bottom",
			"Vec3i_Down",
			"Vec3i_Forward",
			"Vec3i_Front",
			"Vec3i_Left",
			"Vec3i_One",
			"Vec3i_Right",
			"Vec3i_Top",
			"Vec3i_Up",
			"Vec3i_Zero",
			"Vec4_Back",
			"Vec4_Backward",
			"Vec4_Bottom",
			"Vec4_Down",
			"Vec4_Forward",
			"Vec4_Front",
			"Vec4_Left",
			"Vec4_One",
			"Vec4_Right",
			"Vec4_Top",
			"Vec4_Up",
			"Vec4_Zero",
			"Vec4i_Back",
			"Vec4i_Backward",
			"Vec4i_Bottom",
			"Vec4i_Down",
			"Vec4i_Forward",
			"Vec4i_Front",
			"Vec4i_Left",
			"Vec4i_One",
			"Vec4i_Right",
			"Vec4i_Top",
			"Vec4i_Up",
			"Vec4i_Zero",
			"WINDOWS_COMPILATION"
		],
		"custom_functions":
		[
			"#define ArrayCount(Array)",
			"#define Assert(Expression)",
			"#define ClearArray(Array)",
			"#define ClearPointer(Pointer)",
			"#define ClearStruct(Structure)",
			"#define DEBUG_Print(formatStr, args)",
			"#define DEBUG_PrintLine(formatStr, args)",
			"#define DEBUG_Write(formatStr)",
			"#define DEBUG_WriteLine(formatStr)",
			"#define FlagSet(BitwiseField, Bit)",
			"#define FlagUnset(BitwiseField, Bit)",
			"#define Gigabytes(value)",
			"#define IsFlagSet(BitwiseField, Bit)",
			"#define Kilobytes(value)",
			"#define LinkedPushStruct(listPntr, arenaPntr, type)",
			"#define Megabytes(value)",
			"#define NtStr(nullTermString)",
			"#define PACKED( class_to_pack )",
			"#define PushArray(arena, type, number)",
			"#define PushStruct(arena, type)",
			"#define QUOTE(string)",
			"#define TempAlloc(size)",
			"#define TempArray(StructureTypeName, numItems)",
			"#define TempListAdd(listPntr, ItemType, newItemPntr)",
			"#define TempListAddAt(listPntr, ItemType, index, newItemPntr)",
			"#define TempListGet(listPntr, ItemType, index)",
			"#define TempListPush(listPntr, ItemType)",
			"#define TempListPushAt(listPntr, ItemType, index)",
			"#define TempListToArray(listPntr, ItemType, arenaPntr)",
			"#define TempPopMark()",
			"#define TempPushMark()",
			"#define TempString(numChars)",
			"#define TempStruct(StructureTypeName)",
			"#define ToDegrees(radians)",
			"#define ToRadians(degrees)",
			"Buttons_t AppButtonForKey(i32 glfwKeyCode)",
			"Buttons_t AppButtonForMouse(i32 glfwButtonCode)",
			"ColorHSV_t ColorHSVFromRGB(Color_t color)",
			"Color_t ColorFromHSV(u16 hue, r32 saturation, r32 value)",
			"Color_t ColorLerp(Color_t color1, Color_t color2, r32 amount)",
			"Color_t ColorMultiply(Color_t color1, Color_t color2)",
			"Colorf_t ColorfLerp(Colorf_t color1, Colorf_t color2, r32 amount)",
			"Colorf_t ColorfMultiply(Colorf_t left, Colorf_t right)",
			"DayOfWeek_t GetDayOfWeek(const RealTime_t& realTime)",
			"DayOfWeek_t GetDayOfWeek(u64 timestamp)",
			"FileInfo_t ReadEntireFile(const char* filename)",
			"RealTime_t RealTimeAt(u64 timestamp)",
			"TempListItem_t* TempListGet_(TempList_t* listPntr, u32 index)",
			"TempListItem_t* TempListPushAt_(TempList_t* listPntr, u32 index, const void* newItemData = nullptr)",
			"TempListItem_t* TempListPush_(TempList_t* listPntr, const void* newItemData = nullptr)",
			"Version_t AppGetVersion(bool* resetApplication)",
			"bool AppendFile(OpenFile_t* filePntr, const void* newData, u32 newDataSize)",
			"bool ButtonIsPolling(Buttons_t button)",
			"bool IsInfinite(r32 value)",
			"bool IsInsideRec(rec rectangle, v2 point)",
			"bool IsInsideReci(reci rectangle, v2 point)",
			"bool LaunchFile(const char* filename)",
			"bool MaxNoInfinities(r32 value1, r32 value2, r32 value3, r32* maxValue, u8* whichIsMax = nullptr)",
			"bool MinNoInfinities(r32 value1, r32 value2, r32 value3, r32* minValue, u8* whichIsMax = nullptr)",
			"bool OpenFile(const char* fileName, OpenFile_t* openFileOut)",
			"bool RecIntersects(rec rectangle1, rec rectangle2)",
			"bool ReciIntersects(reci rectangle1, reci rectangle2)",
			"bool TryParseBinaryI32(const char* binaryStr, u32 numCharacters, i32* outValue)",
			"bool TryParseBool(const char* str, u32 numCharacters, bool* outValue)",
			"bool TryParseI16(const char* str, u32 numCharacters, int16* outValue)",
			"bool TryParseI32(const char* str, u32 numCharacters, i32* outValue)",
			"bool TryParseU16(const char* str, u32 numCharacters, u16* outValue)",
			"bool TryParseU32(const char* str, u32 numCharacters, u32* outValue)",
			"bool WriteEntireFile(const char* filename, void* memory, uint32 memorySize)",
			"char* ArenaPrint(MemoryArena_t* arenaPntr, const char* formatStr, args)",
			"char* ArenaString(MemoryArena_t* arenaPntr, const char* string, u32 strLength)",
			"char* BoundedStrListAdd(BoundedStrList_t* strListPntr, const char* newString)",
			"char* StrCat(MemoryArena_t* arenaPntr, const char* str1, u32 str1Length, const char* str2, u32 str2Length)",
			"char* StrReplace(MemoryArena_t* arenaPntr, const char* str, u32 strLength, const char* target, u32 targetLength, const char* replace, u32 replaceLength, u32* newLengthOut = nullptr)",
			"char* StrReplaceChar(MemoryArena_t* arenaPntr, const char* str, u32 strLength, char oldChar, char newChar)",
			"char* StrSplice(MemoryArena_t* arenaPntr, const char* str, u32 strLength, u32 spliceStart, u32 spliceLength, const char* replace, u32 replaceLength)",
			"char* TempCombine(const char* string1, const char* string2)",
			"char* TempPrint(const char* formatStr, args)",
			"const char* GetColorName(u32 color)",
			"const char* GetDayOfMonthString(u16 dayOfMonth)",
			"const char* GetDayOfWeekStr(DayOfWeek_t dayOfWeek)",
			"const char* GetDayOfWeekString(DayOfWeek_t dayOfWeek)",
			"const char* GetDir2String(Dir2_t dir2)",
			"const char* GetFileNamePart(const char* filePath)",
			"const char* GetMonthStr(Month_t month)",
			"const char* GetMonthString(Month_t month)",
			"const char* GetTimeUnitStr(TimeUnit_t timeUnit)",
			"const char* GetTimeUnitString(TimeUnit_t timeUnit)",
			"i64 SubtractTimes(const RealTime_t& left, const RealTime_t& right, TimeUnit_t returnUnit)",
			"inline AABB2_t NewAABB2(Vec2_t center, Vec2_t size)",
			"inline AABB3_t NewAABB3(Vec3_t center, Vec3_t size)",
			"inline Color_t ColorTransparent(Color_t color, r32 alpha)",
			"inline Color_t NewColor(u8 r, u8 g, u8 b)",
			"inline Colorf_t NewColorf(r32 r, r32 g, r32 b)",
			"inline Dir2_t Dir2Clockwise(Dir2_t dir2)",
			"inline Dir2_t Dir2CounterClockwise(Dir2_t dir2)",
			"inline Dir2_t Dir2Opposite(Dir2_t dir2)",
			"inline Dir2_t NewDir2(v2 vector)",
			"inline FILETIME GetFileWriteTime(const char* filename)",
			"inline Frustum_t NewFrustum(v3 origin, v3 direction, v3 upVector, v2 fov, r32 zNear, r32 zFar)",
			"inline Ray2_t NewRay2(v2 origin, v2 direction)",
			"inline Ray3_t NewRay3(v3 origin, v3 direction)",
			"inline Transform2_t NewTransform2(v2 position, v2 scale, v2 origin, r32 rotation)",
			"inline Transform3_t NewTransform3(v3 position, v3 scale, v3 rotation)",
			"inline bool IsCharClassAlphaNumeric(u8 c)",
			"inline bool IsCharClassAlphabet(u8 c)",
			"inline bool IsCharClassBeginningCharacter(u8 c)",
			"inline bool IsCharClassControl(u8 c)",
			"inline bool IsCharClassExtendedAscii(u8 c)",
			"inline bool IsCharClassHexChar(u8 c)",
			"inline bool IsCharClassNumeric(u8 c)",
			"inline bool IsCharClassPrintable(u8 c)",
			"inline bool IsCharClassSyntax(u8 c)",
			"inline bool IsCharClassWhitespace(u8 c)",
			"inline bool IsCharClassWord(u8 c)",
			"inline bool IsPostMeridian(u16 twentyFourHourValue)",
			"inline char LowerHexChar(u8 value)",
			"inline char UpperHexChar(u8 value)",
			"inline const char* GetButtonName(Buttons_t button)",
			"inline i32 CeilR32(r32 value)",
			"inline i32 FloorR32(r32 value)",
			"inline i32 MaxI32(i32 value1, i32 value2)",
			"inline i32 MinI32(i32 value1, i32 value2)",
			"inline i32 RoundR32(r32 value)",
			"inline i32 Vec2iDot(const v2i& left, const v2i& right)",
			"inline i32 Vec3iDot(const v3i& left, const v3i& right)",
			"inline i32 Vec4iDot(const v4i& left, const v4i& right)",
			"inline i64 AbsI64(i64 value)",
			"inline mat4 Mat4LookAt(const v3& position, const v3& lookAt, const v3& upVector)",
			"inline mat4 Mat4Multiply(const mat4& left, const mat4& right)",
			"inline mat4 Mat4Ortho(r32 left, r32 right, r32 top, r32 bottom, r32 zNear, r32 zFar)",
			"inline mat4 Mat4PerspectiveFOV(r32 fovy, r32 aspectRatio, r32 zNear, r32 zFar)",
			"inline mat4 Mat4Rotate(const v3& axis, r32 angle)",
			"inline mat4 Mat4RotateX(r32 angle)",
			"inline mat4 Mat4RotateY(r32 angle)",
			"inline mat4 Mat4RotateZ(r32 angle)",
			"inline mat4 Mat4Scale(const v3& scale)",
			"inline mat4 Mat4Translate(const v3& translation)",
			"inline mat4 NewMat4(\n\tr32 r0c0, r32 r0c1, r32 r0c2, r32 r0c3,\n\tr32 r1c0, r32 r1c1, r32 r1c2, r32 r1c3,\n\tr32 r2c0, r32 r2c1, r32 r2c2, r32 r2c3,\n\tr32 r3c0, r32 r3c1, r32 r3c2, r32 r3c3)",
			"inline r32 AbsR32(r32 value)",
			"inline r32 AtanR32(r32 y, r32 x)",
			"inline r32 ClampR32(r32 value, r32 min, r32 max)",
			"inline r32 CosR32(r32 angle)",
			"inline r32 LerpR32(r32 v1, r32 v2, r32 amount)",
			"inline r32 MaxR32(r32 value1, r32 value2)",
			"inline r32 MinR32(r32 value1, r32 value2)",
			"inline r32 SignR32(r32 value)",
			"inline r32 SinR32(r32 angle)",
			"inline r32 SqrtR32(r32 value)",
			"inline r32 TanR32(r32 angle)",
			"inline r32 Vec2Dot(const v2& left, const v2& right)",
			"inline r32 Vec2Length(const v2& vector)",
			"inline r32 Vec2iLength(const v2i& vector)",
			"inline r32 Vec3Dot(const v3& left, const v3& right)",
			"inline r32 Vec3Length(const v3& vector)",
			"inline r32 Vec3iLength(const v3i& vector)",
			"inline r32 Vec4Dot(const v4& left, const v4& right)",
			"inline r32 Vec4Length(const v4& vector)",
			"inline r32 Vec4iLength(const v4i& vector)",
			"inline rec NewRec(v2 topLeft, v2 size)",
			"inline rec NewRecCentered(v2 center, v2 size)",
			"inline reci NewReci(i32 left, i32 top, i32 width, i32 height)",
			"inline reci NewReci(v2i topLeft, v2i size)",
			"inline reci NewReciCentered(v2i center, v2i size)",
			"inline u16 Convert24HourTo12Hour(u16 twentyFourHourValue)",
			"inline u32 RandU32(u32 min, u32 max)",
			"inline u8 GetHexCharValue(char c)",
			"inline v2 Mat4MultiplyVec2(const mat4& matrix, v2 vector)",
			"inline v2 NewVec2(r32 x, r32 y)",
			"inline v2 Vec2Add(const v2& left, const v2& right)",
			"inline v2 Vec2Divide(const v2& left, const v2& right)",
			"inline v2 Vec2Multiply(const v2& left, const v2& right)",
			"inline v2 Vec2Normalize(const v2& vector)",
			"inline v2 Vec2PerpLeft(const v2& vector)",
			"inline v2 Vec2PerpRight(const v2& vector)",
			"inline v2 Vec2Scale(const v2& vector, r32 scalar)",
			"inline v2 Vec2Shrink(const v2& vector, r32 divisor)",
			"inline v2 Vec2Sub(const v2& left, const v2& right)",
			"inline v2i NewVec2i(i32 x, i32 y)",
			"inline v2i Vec2iAdd(const v2i& left, const v2i& right)",
			"inline v2i Vec2iDivide(const v2i& left, const v2i& right)",
			"inline v2i Vec2iMultiply(const v2i& left, const v2i& right)",
			"inline v2i Vec2iScale(const v2i& vector, i32 scalar)",
			"inline v2i Vec2iShrink(const v2i& vector, i32 divisor)",
			"inline v2i Vec2iSub(const v2i& left, const v2i& right)",
			"inline v3 Mat4MultiplyVec3(const mat4& matrix, v3 vector, r32* wOut = nullptr)",
			"inline v3 NewVec3(r32 x, r32 y, r32 z)",
			"inline v3 Vec3Add(const v3& left, const v3& right)",
			"inline v3 Vec3Cross(const v3& left, const v3& right)",
			"inline v3 Vec3Divide(const v3& left, const v3& right)",
			"inline v3 Vec3Multiply(const v3& left, const v3& right)",
			"inline v3 Vec3Normalize(const v3& vector)",
			"inline v3 Vec3Scale(const v3& vector, r32 scalar)",
			"inline v3 Vec3Shrink(const v3& vector, r32 divisor)",
			"inline v3 Vec3Sub(const v3& left, const v3& right)",
			"inline v3i NewVec3i(i32 x, i32 y, i32 z)",
			"inline v3i Vec3iAdd(const v3i& left, const v3i& right)",
			"inline v3i Vec3iCross(const v3i& left, const v3i& right)",
			"inline v3i Vec3iDivide(const v3i& left, const v3i& right)",
			"inline v3i Vec3iMultiply(const v3i& left, const v3i& right)",
			"inline v3i Vec3iScale(const v3i& vector, i32 scalar)",
			"inline v3i Vec3iShrink(const v3i& vector, i32 divisor)",
			"inline v3i Vec3iSub(const v3i& left, const v3i& right)",
			"inline v4 Mat4MultiplyVec4(const mat4& matrix, v4 vector)",
			"inline v4 NewVec4(r32 x, r32 y, r32 z, r32 w)",
			"inline v4 Vec4Add(const v4& left, const v4& right)",
			"inline v4 Vec4Divide(const v4& left, const v4& right)",
			"inline v4 Vec4Multiply(const v4& left, const v4& right)",
			"inline v4 Vec4Normalize(const v4& vector)",
			"inline v4 Vec4Scale(const v4& vector, r32 scalar)",
			"inline v4 Vec4Shrink(const v4& vector, r32 divisor)",
			"inline v4 Vec4Sub(const v4& left, const v4& right)",
			"inline v4i NewVec4i(i32 x, i32 y, i32 z, i32 w)",
			"inline v4i Vec4iAdd(const v4i& left, const v4i& right)",
			"inline v4i Vec4iDivide(const v4i& left, const v4i& right)",
			"inline v4i Vec4iMultiply(const v4i& left, const v4i& right)",
			"inline v4i Vec4iScale(const v4i& vector, i32 scalar)",
			"inline v4i Vec4iShrink(const v4i& vector, i32 divisor)",
			"inline v4i Vec4iSub(const v4i& left, const v4i& right)",
			"mat4 Transform2Matrix(Transform2_t transform)",
			"mat4 Transform3Matrix(Transform3_t transform)",
			"r32 Ease(EasingStyle_t style, r32 p)",
			"r32 HueToRGB(r32 value1, r32 value2, r32 vH)",
			"rec RecDeflate(const rec& rectangle, r32 scalar)",
			"rec RecDeflateX(const rec& rectangle, r32 scalar)",
			"rec RecDeflateY(const rec& rectangle, r32 scalar)",
			"rec RecExpand(const rec& rectangle, v2 vector)",
			"rec RecInflate(const rec& rectangle, r32 scalar)",
			"rec RecInflateX(const rec& rectangle, r32 scalar)",
			"rec RecInflateY(const rec& rectangle, r32 scalar)",
			"rec RecInvertX(const rec& rectangle)",
			"rec RecInvertY(const rec& rectangle)",
			"rec RecShift(const rec& rectangle, v2 vector)",
			"rec RecSquarify(const rec& rectangle)",
			"rec ScaleRecToFitInsideHorizontally(rec rectangle, rec innerRec, r32* scaleOut = nullptr)",
			"reci ReciDeflate(const reci& rectangle, i32 scalar)",
			"reci ReciDeflateX(const reci& rectangle, i32 scalar)",
			"reci ReciDeflateY(const reci& rectangle, i32 scalar)",
			"reci ReciExpand(const reci& rectangle, v2i vector)",
			"reci ReciInflate(const reci& rectangle, i32 scalar)",
			"reci ReciInflateX(const reci& rectangle, i32 scalar)",
			"reci ReciInflateY(const reci& rectangle, i32 scalar)",
			"reci ReciInvertX(const reci& rectangle)",
			"reci ReciInvertY(const reci& rectangle)",
			"reci ReciShift(const reci& rectangle, v2i vector)",
			"reci ReciSquarify(const reci& rectangle)",
			"u32 ArenaGetHighWaterMark(MemoryArena_t* arena)",
			"u32 GetColorByIndex(u32 index)",
			"u32 GetColorIndex(u32 color)",
			"u32 GetRunningDirectory(char* buffer, u32 maxBufferSize)",
			"u64 GetTimestamp(const RealTime_t& realTime)",
			"u8 GetKeysForButton(Buttons_t button, i32* keyBuffer)",
			"u8 GetMouseBtnsForButton(Buttons_t button, i32* keyBuffer)",
			"u8 NumDigitsDEC(u32 number)",
			"void AppClosing(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppInitialize(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppReloaded(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppReloading(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppUpdate(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory, const AppInput_t* appInput, AppOutput_t* appOutput)",
			"void ArenaPop(MemoryArena_t* arena, void* pointer)",
			"void ArenaPopMark(MemoryArena_t* arena)",
			"void ArenaPushMark(MemoryArena_t* arena)",
			"void ArenaResetHighWaterMark(MemoryArena_t* arena)",
			"void BoundedStrListCreate(BoundedStrList_t* strListPntr, u32 maxNumStrings, u32 maxStringLength, MemoryArena_t* memArena)",
			"void BoundedStrListDestroy(BoundedStrList_t* strListPntr, MemoryArena_t* memArena)",
			"void BoundedStrListSolidify(BoundedStrList_t* strListPntr, MemoryArena_t* oldArena, MemoryArena_t* newArena = nullptr, bool popOldMemory = true)",
			"void CloseFile(OpenFile_t* filePntr)",
			"void CreateLinkedList(LinkedList_t* list)",
			"void DeleteLinkedList(LinkedList_t* list, MemoryArena_t* memoryArena)",
			"void FreeFileMemory(FileInfo_t* fileInfo)",
			"void HandleKeyEvent(GLFWwindow* window, AppInput_t* currentInput, i32 glfwKeyCode, i32 action)",
			"void HandleMouseEvent(GLFWwindow* window, AppInput_t* currentInput, i32 glfwButtonCode, bool pressed)",
			"void InitializeMemoryArenaHeap(MemoryArena_t* arena, void* base, u32 size)",
			"void InitializeMemoryArenaLinear(MemoryArena_t* arena, void* base , u32 size)",
			"void InitializeMemoryArenaTemp(MemoryArena_t* arena, void* base , u32 size, u32 maxNumMarks)",
			"void LinkedListPop(LinkedList_t* list, MemoryArena_t* memoryArena, int32 index)",
			"void StrReplaceCharInPlace(char* str, u32 strLength, char oldChar, char newChar)",
			"void StrReplaceInPlace(char* str, u32 strLength, const char* target, const char* replace, u32 replaceLength)",
			"void StrSpliceInPlace(char* str, u32 strLength, u32 spliceStart, u32 spliceLength, const char* replace)",
			"void TempListInit(TempList_t* listPntr, u32 itemSize)",
			"void UpdateWindowTitle(GLFWwindow* window, const char* baseName, Version_t* platformVersion, Version_t* appVersion)",
			"void* ArenaPush_(MemoryArena_t* arena, u32 allocSize)",
			"void* LinkedListGetItem(LinkedList_t* list, int32 index)",
			"void* LinkedListGetLastItem(LinkedList_t* list)",
			"void* LinkedListInsert(LinkedList_t* list, MemoryArena_t* memoryArena, int32 index, uint32 itemSize)",
			"void* LinkedListPush(LinkedList_t* list, MemoryArena_t* memoryArena, uint32 itemSize)",
			"void* TempListToArray_(TempList_t* listPntr, MemoryArena_t* arenaPntr)"
		],
		"custom_globals":
		[
			"AppInput",
			"PlatformInfo",
			"PlatformVersion",
			"TempArena",
			"WorkingDirectory"
		],
		"custom_types":
		[
			"AABB2_t",
			"AABB3_t",
			"AABBInfo_t",
			"AppClosing_f",
			"AppGetVersion_f",
			"AppInitialize_f",
			"AppInput_t",
			"AppMemory_t",
			"AppReloaded_f",
			"AppReloading_f",
			"AppUpdate_f",
			"AppendFile_f",
			"Axis_t",
			"BoundedStrList_t",
			"ButtonModifier_t",
			"ButtonState_t",
			"Buttons_t",
			"CloseFile_f",
			"ColorHSV_t",
			"Color_t",
			"Colorf_t",
			"CopyFromClipboard_f",
			"CopyToClipboard_f",
			"CreateNewWindow_f",
			"CursorType_t",
			"DayOfWeek_t",
			"DebugPrintLine_f",
			"DebugPrint_f",
			"DebugWriteLine_f",
			"DebugWrite_f",
			"Dir2_t",
			"Dir3_t",
			"EasingStyle_t",
			"FreeFileMemory_f",
			"FrustumInfo_t",
			"Frustum_t",
			"GLFWwindow",
			"GetAbsolutePath_f",
			"HeapAllocationHeader_t",
			"LaunchFile_f",
			"LinkHeader_t",
			"LinkedList_t",
			"Matrix4_t",
			"MemoryArenaType_t",
			"MemoryArena_t",
			"Month_t",
			"OpenFile_f",
			"OpenFile_t",
			"PlatformInfo_t",
			"PlatformType_t",
			"Ray2_t",
			"Ray3_t",
			"RayvAABBResult_t",
			"ReadEntireFile_f",
			"RealTime_t",
			"Rectangle_t",
			"Rectanglei_t",
			"ResolveIntersectResult_t",
			"TempArenaHeader_t",
			"TempListItem_t",
			"TempList_t",
			"TimeUnit_t",
			"Transform2_t",
			"Transform3_t",
			"Vec2_t",
			"Vec2i_t",
			"Vec3_t",
			"Vec3i_t",
			"Vec4_t",
			"Vec4i_t",
			"Version_t",
			"WriteEntireFile_f",
			"mat4",
			"rec",
			"reci",
			"v2",
			"v2i",
			"v3",
			"v3i",
			"v4",
			"v4i"
		]
	}
}
