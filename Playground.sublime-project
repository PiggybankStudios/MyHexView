{
	"folders":
	[
		{
			"path": "."
		},
		{
			"path": "../../lib/mylib"
		}
	],
	"settings":
	{
		"build_options":
		[
		],
		"custom_constants":
		[
			"APPLICATION_DLL_NAME",
			"APPLICATION_TEMP_DLL_NAME",
			"Button_0",
			"Button_1",
			"Button_2",
			"Button_3",
			"Button_4",
			"Button_5",
			"Button_6",
			"Button_7",
			"Button_8",
			"Button_9",
			"Button_A",
			"Button_Alt",
			"Button_B",
			"Button_Backspace",
			"Button_C",
			"Button_CapsLock",
			"Button_CloseBracket",
			"Button_Colon",
			"Button_Comma",
			"Button_Control",
			"Button_D",
			"Button_Delete",
			"Button_Down",
			"Button_E",
			"Button_End",
			"Button_Enter",
			"Button_Escape",
			"Button_F",
			"Button_F1",
			"Button_F10",
			"Button_F11",
			"Button_F12",
			"Button_F2",
			"Button_F3",
			"Button_F4",
			"Button_F5",
			"Button_F6",
			"Button_F7",
			"Button_F8",
			"Button_F9",
			"Button_G",
			"Button_H",
			"Button_Home",
			"Button_I",
			"Button_Insert",
			"Button_J",
			"Button_K",
			"Button_L",
			"Button_Left",
			"Button_M",
			"Button_Minus",
			"Button_N",
			"Button_O",
			"Button_OpenBracket",
			"Button_P",
			"Button_PageDown",
			"Button_PageUp",
			"Button_Period",
			"Button_Pipe",
			"Button_Plus",
			"Button_Q",
			"Button_QuestionMark",
			"Button_Quote",
			"Button_R",
			"Button_Right",
			"Button_S",
			"Button_Shift",
			"Button_Space",
			"Button_T",
			"Button_Tab",
			"Button_Tilde",
			"Button_U",
			"Button_Up",
			"Button_V",
			"Button_W",
			"Button_X",
			"Button_Y",
			"Button_Z",
			"Buttons_NumButtons",
			"Cursor_Default",
			"Cursor_Pointer",
			"Cursor_ResizeHorizontal",
			"Cursor_ResizeVertical",
			"Cursor_Text",
			"DAYS_PER_4YEARS",
			"DEBUG",
			"DEFAULT_WINDOW_TITLE",
			"DayOfWeek_Friday",
			"DayOfWeek_Monday",
			"DayOfWeek_Saturday",
			"DayOfWeek_Sunday",
			"DayOfWeek_Thursday",
			"DayOfWeek_Tuesday",
			"DayOfWeek_Wednesday",
			"EXE_ICON_ID",
			"GLFW_PRESS",
			"GLFW_REPEAT",
			"LINUX_COMPILATION",
			"Modifier_Alt",
			"Modifier_CapsLock",
			"Modifier_Ctrl",
			"Modifier_Shift",
			"Month_April",
			"Month_August",
			"Month_December",
			"Month_February",
			"Month_January",
			"Month_July",
			"Month_June",
			"Month_March",
			"Month_May",
			"Month_November",
			"Month_October",
			"Month_September",
			"MouseButton_Left",
			"MouseButton_Middle",
			"MouseButton_Right",
			"NumCursorTypes",
			"OSX_COMPILATION",
			"PLATFORM_VERSION_BUILD",
			"PLATFORM_VERSION_MAJOR",
			"PLATFORM_VERSION_MINOR",
			"PROJECT_NAME",
			"Pi32",
			"Pi64",
			"Platform_Linux",
			"Platform_OSX",
			"Platform_Windows",
			"SECONDS_PER_4YEARS",
			"SECONDS_PER_DAY",
			"SECONDS_PER_HOUR",
			"SECONDS_PER_WEEK",
			"SHOW_CONSOLE_WINDOW",
			"TOPMOST_WINDOW",
			"TimeUnit_Days",
			"TimeUnit_Hours",
			"TimeUnit_Milliseconds",
			"TimeUnit_Minutes",
			"TimeUnit_Months",
			"TimeUnit_Seconds",
			"TimeUnit_Years",
			"WINDOWS_COMPILATION"
		],
		"custom_functions":
		[
			"#define ArrayCount(Array)",
			"#define ClearArray(Array)",
			"#define ClearPointer(Pointer)",
			"#define ClearStruct(Structure)",
			"#define DEBUG_Print(formatStr, args)",
			"#define DEBUG_PrintLine(formatStr, args)",
			"#define DEBUG_Write(formatStr)",
			"#define DEBUG_WriteLine(formatStr)",
			"#define FlagSet(BitwiseField, Bit)",
			"#define FlagUnset(BitwiseField, Bit)",
			"#define Gigabytes(value)",
			"#define IsFlagSet(BitwiseField, Bit)",
			"#define Kilobytes(value)",
			"#define Megabytes(value)",
			"#define PACKED( class_to_pack )",
			"#define QUOTE(string)",
			"#define ToDegrees(radians)",
			"#define ToRadians(degrees)",
			"Buttons_t AppButtonForKey(i32 glfwKeyCode)",
			"Buttons_t AppButtonForMouse(i32 glfwButtonCode)",
			"DayOfWeek_t GetDayOfWeek(const RealTime_t& realTime)",
			"DayOfWeek_t GetDayOfWeek(u64 timestamp)",
			"FileInfo_t ReadEntireFile(const char* filename)",
			"RealTime_t RealTimeAt(u64 timestamp)",
			"Version_t AppGetVersion(bool* resetApplication)",
			"bool AppendFile(OpenFile_t* filePntr, const void* newData, u32 newDataSize)",
			"bool ButtonIsPolling(Buttons_t button)",
			"bool LaunchFile(const char* filename)",
			"bool OpenFile(const char* fileName, OpenFile_t* openFileOut)",
			"bool WriteEntireFile(const char* filename, void* memory, uint32 memorySize)",
			"const char* GetDayOfMonthString(u16 dayOfMonth)",
			"const char* GetDayOfWeekStr(DayOfWeek_t dayOfWeek)",
			"const char* GetDayOfWeekString(DayOfWeek_t dayOfWeek)",
			"const char* GetMonthStr(Month_t month)",
			"const char* GetMonthString(Month_t month)",
			"const char* GetTimeUnitStr(TimeUnit_t timeUnit)",
			"const char* GetTimeUnitString(TimeUnit_t timeUnit)",
			"i64 SubtractTimes(const RealTime_t& left, const RealTime_t& right, TimeUnit_t returnUnit)",
			"inline FILETIME GetFileWriteTime(const char* filename)",
			"inline bool IsPostMeridian(u16 twentyFourHourValue)",
			"inline const char* GetButtonName(Buttons_t button)",
			"inline u16 Convert24HourTo12Hour(u16 twentyFourHourValue)",
			"u32 GetRunningDirectory(char* buffer, u32 maxBufferSize)",
			"u64 GetTimestamp(const RealTime_t& realTime)",
			"u8 GetKeysForButton(Buttons_t button, i32* keyBuffer)",
			"u8 GetMouseBtnsForButton(Buttons_t button, i32* keyBuffer)",
			"void AppClosing(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppInitialize(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppReloaded(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppReloading(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory)",
			"void AppUpdate(const PlatformInfo_t* platformInfo, const AppMemory_t* appMemory, const AppInput_t* appInput, AppOutput_t* appOutput)",
			"void CloseFile(OpenFile_t* filePntr)",
			"void FreeFileMemory(FileInfo_t* fileInfo)",
			"void HandleKeyEvent(GLFWwindow* window, AppInput_t* currentInput, i32 glfwKeyCode, i32 action)",
			"void HandleMouseEvent(GLFWwindow* window, AppInput_t* currentInput, i32 glfwButtonCode, bool pressed)",
			"void UpdateWindowTitle(GLFWwindow* window, const char* baseName, Version_t* platformVersion, Version_t* appVersion)"
		],
		"custom_globals":
		[
			"AppInput",
			"PlatformInfo",
			"PlatformVersion",
			"WorkingDirectory"
		],
		"custom_types":
		[
			"AppClosing_f",
			"AppGetVersion_f",
			"AppInitialize_f",
			"AppInput_t",
			"AppMemory_t",
			"AppReloaded_f",
			"AppReloading_f",
			"AppUpdate_f",
			"AppendFile_f",
			"ButtonModifier_t",
			"ButtonState_t",
			"Buttons_t",
			"CloseFile_f",
			"CopyFromClipboard_f",
			"CopyToClipboard_f",
			"CreateNewWindow_f",
			"CursorType_t",
			"DayOfWeek_t",
			"DebugPrintLine_f",
			"DebugPrint_f",
			"DebugWriteLine_f",
			"DebugWrite_f",
			"FreeFileMemory_f",
			"GLFWwindow",
			"GetAbsolutePath_f",
			"LaunchFile_f",
			"Month_t",
			"OpenFile_f",
			"OpenFile_t",
			"PlatformInfo_t",
			"PlatformType_t",
			"ReadEntireFile_f",
			"RealTime_t",
			"TimeUnit_t",
			"Version_t",
			"WriteEntireFile_f"
		]
	}
}
